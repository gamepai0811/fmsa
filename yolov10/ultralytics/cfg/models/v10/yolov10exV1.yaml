# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024] 

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2

  # Local Attention and Conv
  - [0, 1, TF_Down, [128, 2, 2]] # 1-P2/4
  - [0, 1, Conv, [128, 3, 2]] # 2-P2/4
  - [[1, 2], 1, Concat, [1]] # 3, c=256

  - [-1, 3, C2f, [128, True]] # 4

  # Local Attention and Conv
  - [4, 1, TF_Down, [256, 2, 2]] # 5-P3/8 -> Todo: the output is to be consolidated
  - [4, 1, Conv, [256, 3, 2]] # 6-P3/8
  - [[5, 6], 1, Concat, [1]] # 7, c=512

  - [-1, 6, C2f, [256, True]] # 8

  - [-1, 1, SCDown, [512, 3, 2]] # 9-P4/16
  - [-1, 6, C2f, [512, True]]
  - [-1, 1, SCDown, [1024, 3, 2]] # 11-P5/32
  - [-1, 3, C2f, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]] # 13
  #- [-1, 1, PSA, [1024]] # 

# YOLOv8.0n head
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 14
  - [[-1, 10], 1, Concat, [1]] # cat backbone P4
  - [-1, 3, C2f, [512]] # 16

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 17
  - [[-1, 8], 1, Concat, [1]] # cat backbone P3
  - [-1, 3, C2f, [256]] # 19 (P3/8-small)

  #- [-1, 1, Conv, [256, 3, 2]]
  #- [[-1, 13], 1, Concat, [1]] # cat head P4
  #- [-1, 3, C2f, [512]] # 19 (P4/16-medium)

  #- [-1, 1, SCDown, [512, 3, 2]]
  #- [[-1, 10], 1, Concat, [1]] # cat head P5
  #- [-1, 3, C2fCIB, [1024, True, True]] # 22 (P5/32-large)

  #- [[16, 19, 22], 1, v10Detect, [nc]] # Detect(P3, P4, P5)

  #Tony's code
  #input of P3: 256(w)*80*80 -- b, c, h, w?
  #Transformer(dim, depth, heads, dim_head, mlp_dim, dropout = 0.)
  - [-1, 1, Transformer, [256, 1, 8]]
  - [[-1, 19], 1, Concat, [1]] # cat head P3
  - [-1, 3, C2f, [256]]
  - [[-1], 1, v10Detect, [nc]] # only use P3 for small object
